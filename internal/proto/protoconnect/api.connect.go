// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: api.proto

package protoconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	proto "github.com/kl09/powlibrary/internal/proto"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// LibraryServiceName is the fully-qualified name of the LibraryService service.
	LibraryServiceName = "powlibrary.api.LibraryService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// LibraryServiceGenerateTaskProcedure is the fully-qualified name of the LibraryService's
	// GenerateTask RPC.
	LibraryServiceGenerateTaskProcedure = "/powlibrary.api.LibraryService/GenerateTask"
	// LibraryServiceGetQuoteProcedure is the fully-qualified name of the LibraryService's GetQuote RPC.
	LibraryServiceGetQuoteProcedure = "/powlibrary.api.LibraryService/GetQuote"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	libraryServiceServiceDescriptor            = proto.File_api_proto.Services().ByName("LibraryService")
	libraryServiceGenerateTaskMethodDescriptor = libraryServiceServiceDescriptor.Methods().ByName("GenerateTask")
	libraryServiceGetQuoteMethodDescriptor     = libraryServiceServiceDescriptor.Methods().ByName("GetQuote")
)

// LibraryServiceClient is a client for the powlibrary.api.LibraryService service.
type LibraryServiceClient interface {
	GenerateTask(context.Context, *connect.Request[proto.GenerateTaskRequest]) (*connect.Response[proto.GenerateTaskResponse], error)
	GetQuote(context.Context, *connect.Request[proto.GetQuoteRequest]) (*connect.Response[proto.GetQuoteResponse], error)
}

// NewLibraryServiceClient constructs a client for the powlibrary.api.LibraryService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewLibraryServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) LibraryServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &libraryServiceClient{
		generateTask: connect.NewClient[proto.GenerateTaskRequest, proto.GenerateTaskResponse](
			httpClient,
			baseURL+LibraryServiceGenerateTaskProcedure,
			connect.WithSchema(libraryServiceGenerateTaskMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getQuote: connect.NewClient[proto.GetQuoteRequest, proto.GetQuoteResponse](
			httpClient,
			baseURL+LibraryServiceGetQuoteProcedure,
			connect.WithSchema(libraryServiceGetQuoteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// libraryServiceClient implements LibraryServiceClient.
type libraryServiceClient struct {
	generateTask *connect.Client[proto.GenerateTaskRequest, proto.GenerateTaskResponse]
	getQuote     *connect.Client[proto.GetQuoteRequest, proto.GetQuoteResponse]
}

// GenerateTask calls powlibrary.api.LibraryService.GenerateTask.
func (c *libraryServiceClient) GenerateTask(ctx context.Context, req *connect.Request[proto.GenerateTaskRequest]) (*connect.Response[proto.GenerateTaskResponse], error) {
	return c.generateTask.CallUnary(ctx, req)
}

// GetQuote calls powlibrary.api.LibraryService.GetQuote.
func (c *libraryServiceClient) GetQuote(ctx context.Context, req *connect.Request[proto.GetQuoteRequest]) (*connect.Response[proto.GetQuoteResponse], error) {
	return c.getQuote.CallUnary(ctx, req)
}

// LibraryServiceHandler is an implementation of the powlibrary.api.LibraryService service.
type LibraryServiceHandler interface {
	GenerateTask(context.Context, *connect.Request[proto.GenerateTaskRequest]) (*connect.Response[proto.GenerateTaskResponse], error)
	GetQuote(context.Context, *connect.Request[proto.GetQuoteRequest]) (*connect.Response[proto.GetQuoteResponse], error)
}

// NewLibraryServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewLibraryServiceHandler(svc LibraryServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	libraryServiceGenerateTaskHandler := connect.NewUnaryHandler(
		LibraryServiceGenerateTaskProcedure,
		svc.GenerateTask,
		connect.WithSchema(libraryServiceGenerateTaskMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	libraryServiceGetQuoteHandler := connect.NewUnaryHandler(
		LibraryServiceGetQuoteProcedure,
		svc.GetQuote,
		connect.WithSchema(libraryServiceGetQuoteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/powlibrary.api.LibraryService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case LibraryServiceGenerateTaskProcedure:
			libraryServiceGenerateTaskHandler.ServeHTTP(w, r)
		case LibraryServiceGetQuoteProcedure:
			libraryServiceGetQuoteHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedLibraryServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedLibraryServiceHandler struct{}

func (UnimplementedLibraryServiceHandler) GenerateTask(context.Context, *connect.Request[proto.GenerateTaskRequest]) (*connect.Response[proto.GenerateTaskResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("powlibrary.api.LibraryService.GenerateTask is not implemented"))
}

func (UnimplementedLibraryServiceHandler) GetQuote(context.Context, *connect.Request[proto.GetQuoteRequest]) (*connect.Response[proto.GetQuoteResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("powlibrary.api.LibraryService.GetQuote is not implemented"))
}
